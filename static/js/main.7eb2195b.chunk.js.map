{"version":3,"sources":["assets/iconsRWB.png","Header.js","assets/001-popcorn.png","assets/002-harvest.png","assets/003-taxi.png","assets/004-credit-card.png","assets/006-house.png","Currencies.js","assets/money.png","App.js","reportWebVitals.js","index.js"],"names":["plane","icon","faPaperPlane","Header","className","src","logo","alt","Component","face","faSadTear","Currencies","handleChange","evt","setState","target","name","value","calculateIncome","result","props","userIncome","targetRate","convertedIncome","toFixed","calculateSurplusShortage","newSurplusShortage","state","totalExpenses","surplusShortage","calculateTotalExpenses","newTotal","food","housing","bills","transport","entertainment","map","number","parseFloat","reduce","accumulator","currentValue","Swal","fire","text","showClass","popup","hideClass","bind","htmlFor","type","id","onChange","this","expensesArray","onClick","Intl","NumberFormat","format","targetCurrencyCode","up","faAngleUp","App","faAngleDown","handleIncomeInputChange","event","incomeInput","isNaN","isIncomeValid","handleCurrentChange","userSelection","foundFlag","countryNames","filter","country","currencyCode","flag","currentCurrencyCode","getCurrencies","handleTargetChange","targetSelection","foundTargetFlag","targetFlag","axios","url","then","res","conversionCode","convertedRate","data","rates","catch","error","confirmButtonColor","countries","newCountries","forEach","currencies","currency","code","push","placeholder","money","index","parentCallback","callbackFunction","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7eb2195b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/iconsRWB.846ceac1.png\";","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport logo from './assets/iconsRWB.png';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPaperPlane} from '@fortawesome/free-solid-svg-icons'\r\nconst plane = <FontAwesomeIcon icon={faPaperPlane} />\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"headerContent\">\r\n                        <div className=\"logo\">\r\n                            <img src={logo} alt=\"Logo for the app Remote Work Budget\"/>\r\n                        </div>\r\n                        <h1>\r\n                            <span className=\"logoSlide\">Remote</span> <span className=\"logoSlide\">Work<span className=\"plane\">{plane}</span></span> <span className=\"logoSlide\">Budget</span>\r\n                        </h1>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/001-popcorn.46ec6dfd.png\";","export default __webpack_public_path__ + \"static/media/002-harvest.bb6efbdd.png\";","export default __webpack_public_path__ + \"static/media/003-taxi.e0368ddd.png\";","export default __webpack_public_path__ + \"static/media/004-credit-card.9d91e6f9.png\";","export default __webpack_public_path__ + \"static/media/006-house.f0ef691f.png\";","import React, { Component } from 'react';\r\n\r\n// Import Assets\r\nimport entertainment from './assets/001-popcorn.png';\r\nimport food from './assets/002-harvest.png';\r\nimport transport from './assets/003-taxi.png';\r\nimport bills from './assets/004-credit-card.png';\r\nimport housing from './assets/006-house.png';\r\n\r\n// Import Packages\r\nimport Swal from \"sweetalert2\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPaperPlane, faSadTear } from '@fortawesome/free-solid-svg-icons'\r\nconst plane = <FontAwesomeIcon icon={faPaperPlane} />\r\nconst face = <FontAwesomeIcon icon={faSadTear} />\r\n\r\nclass Currencies extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      housing: 0,\r\n      bills: 0,\r\n      entertainment: 0,\r\n      food: 0,\r\n      transport: 0,\r\n      convertedIncome: 0,\r\n      totalExpenses: 0,\r\n      surplusShortage: 0\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange = (evt) => {\r\n    // and use it to target the key on our `state` object with the same name, using bracket syntax\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value\r\n    });\r\n  }\r\n\r\n  calculateIncome = () => {\r\n    // result is the userIncome in the new currency.\r\n    let result = this.props.userIncome * this.props.targetRate;\r\n\r\n    this.setState({\r\n      convertedIncome: result.toFixed(2)\r\n    }, () => {\r\n      // call the surplus shortage function only when the convertedIncome is updated\r\n      this.calculateSurplusShortage()\r\n    })\r\n  }\r\n\r\n  calculateSurplusShortage = () => {\r\n    // get the annual expenses in the new currency\r\n    let newSurplusShortage = this.state.convertedIncome - this.state.totalExpenses\r\n    this.setState({\r\n      surplusShortage: newSurplusShortage.toFixed(2)\r\n    })\r\n  }\r\n\r\n\r\n\r\n  calculateTotalExpenses = () => {\r\n    // array to store all the string values from the state\r\n    let expensesArray = [\r\n      this.state.food,\r\n      this.state.housing,\r\n      this.state.bills,\r\n      this.state.transport,\r\n      this.state.entertainment\r\n    ]\r\n    // converting to array of numbers to use later in the calculation\r\n    let newExpensesArray = expensesArray.map(number => {\r\n      return parseFloat(number)\r\n    })\r\n\r\n\r\n    // building the calculation\r\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n    // takes the number array and uses the reducer to calculate the total sum of expenses\r\n    let newTotal = newExpensesArray.reduce(reducer);\r\n    if (this.props.targetRate) {\r\n      this.setState(\r\n        {\r\n          totalExpenses: newTotal.toFixed(2),\r\n        },\r\n        () => {\r\n          this.calculateIncome()\r\n        }\r\n      )\r\n    } else {\r\n       Swal.fire({\r\n\t\t\t\t\ttext: `Please select target currency.`,\r\n\t\t\t\t\tshowClass: {\r\n\t\t\t\t\t\tpopup: 'animate__animated animate__fadeInDown',\r\n\t\t\t\t\t},\r\n\t\t\t\t\thideClass: {\r\n\t\t\t\t\t\tpopup: 'animate__animated animate__fadeOutUp',\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n    }\r\n  }\r\n\r\n\r\nrender() {\r\n    return (\r\n\t\t<div>\r\n\t\t\t<div className=\"expenses\">\r\n\t\t\t\t<h3>Monthly Budget</h3>\r\n\t\t\t\t<div className=\"expense\">\r\n\t\t\t\t\t<div className=\"labelLogo\">\r\n\t\t\t\t\t\t<img src={housing} alt=\"little icon representing housing\" />\r\n\t\t\t\t\t\t<label htmlFor=\"housing\">Housing</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"housing\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid=\"housing\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tvalue={this.state.expensesArray}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"expense\">\r\n\t\t\t\t\t<div className=\"labelLogo\">\r\n\t\t\t\t\t\t<img src={bills} alt=\"little icon representing bills\" />\r\n\t\t\t\t\t\t<label htmlFor=\"bills\">Bills</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"bills\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid=\"bills\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tvalue={this.state.expensesArray}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"expense\">\r\n\t\t\t\t\t<div className=\"labelLogo\">\r\n\t\t\t\t\t\t<img src={food} alt=\"little icon representing food\" />\r\n\t\t\t\t\t\t<label htmlFor=\"food\">Food</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"food\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid=\"food\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tvalue={this.state.expensesArray}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"expense\">\r\n\t\t\t\t\t<div className=\"labelLogo\">\r\n\t\t\t\t\t\t<img src={transport} alt=\"little icon representing transport\" />\r\n\t\t\t\t\t\t<label htmlFor=\"transport\">Transport</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"transport\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid=\"transport\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tvalue={this.state.expensesArray}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"expense\">\r\n\t\t\t\t\t<div className=\"labelLogo\">\r\n\t\t\t\t\t\t<img src={entertainment} alt=\"little icon representing entertainment\" />\r\n\t\t\t\t\t\t<label htmlFor=\"entertainment\">Entertainment</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"entertainment\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid=\"entertainment\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tvalue={this.state.expensesArray}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"totalExpenses\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"calculateTotal\"\r\n\t\t\t\t\t\tonClick={this.calculateTotalExpenses}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCalculate Total\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\r\n\t\t\t<div className=\"results\">\r\n\t\t\t\t<div className=\"resultsFlex\">\r\n\t\t\t\t\t{/* use conditional statement to display */}\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tMonthly Expenses<br />\r\n\t\t\t\t\t\t<span className=\"resultStyle\">\r\n\t\t\t\t\t\t\t${this.state.totalExpenses}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tConverted Income<br />\r\n\t\t\t\t\t\t<span className=\"resultStyle\">\r\n\t\t\t\t\t\t\t${new Intl.NumberFormat().format(this.state.convertedIncome)}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t{this.props.targetCurrencyCode}\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t{this.state.surplusShortage > -1 ? (\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tAwesome! <span className=\"plane\">{plane}</span> <br />\r\n\t\t\t\t\t\t\t<span className=\"resultStyle\">\r\n\t\t\t\t\t\t\t\t${new Intl.NumberFormat().format(this.state.surplusShortage)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t{this.props.targetCurrencyCode}\r\n\t\t\t\t\t\t\t<p className=\"small\">You've got extra cash to save for a rainy day.</p>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tUh-oh! <span className=\"plane\">{face}</span> <br />\r\n\t\t\t\t\t\t\t<span className=\"resultStyle\">\r\n\t\t\t\t\t\t\t\t${new Intl.NumberFormat().format(this.state.surplusShortage)}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t{this.props.targetCurrencyCode}\r\n\t\t\t\t\t\t\t<p className=\"small\">Looks like you're spending a little too much.</p>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}}\r\nexport default Currencies;","export default __webpack_public_path__ + \"static/media/money.5d042233.png\";","// import Components\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport Currencies from './Currencies';\r\n\r\n// Import Packages\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\nimport money from './assets/money.png';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons';\r\nconst up = <FontAwesomeIcon icon={faAngleUp} />;\r\nconst down = <FontAwesomeIcon icon={faAngleDown} />;\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tcountryNames: [],\r\n\t\t\tcurrentCurrencyCode: '',\r\n\t\t\ttargetCurrencyCode: '',\r\n\t\t\tflag: '',\r\n\t\t\ttargetFlag: 'https://restcountries.eu/data/zwe.svg',\r\n\t\t\tuserIncome: 0,\r\n\t\t\ttargetRate: 0,\r\n\t\t\tisIncomeValid: false,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// Create an axios call to retrieve data from each country\r\n\t\taxios({\r\n\t\t\turl: 'https://restcountries.eu/rest/v2/all',\r\n\t\t}).then((res) => {\r\n\t\t\t// With results, create a variable to store data\r\n\t\t\tconst countries = res.data\r\n\r\n\t\t\t// Create an empty array\r\n\t\t\tconst newCountries = []\r\n\t\t\t// Loop through each country's data\r\n\t\t\tcountries.forEach((country) => {\r\n\t\t\t\t// For each country, store the country name in a variable\r\n\t\t\t\tconst name = country.name\r\n\t\t\t\t// For each country, store the country flag URL in a variable\r\n\t\t\t\tconst flag = country.flag\r\n\t\t\t\t// For each country, store the country currency in a variable\r\n\t\t\t\tconst countryCurrencies = country.currencies\r\n\t\t\t\t\r\n\t\t\t\tcountryCurrencies.forEach((currency) => {\r\n\t\t\t\t\tlet currencyCode = currency.code\r\n\r\n\t\t\t\t\tnewCountries.push({ name: name, currencyCode: currencyCode, flag: flag })\r\n\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tcountryNames: newCountries,\r\n\t\t\t\t\t\tcurrentCurrencyCode: currencyCode,\r\n\t\t\t\t\t\tflag: flag,\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\thandleIncomeInputChange = (event) => {\r\n\t\tconst incomeInput = event.target.value\r\n\r\n    // if income input is not a number, set state to true,\r\n    // which displays error message\r\n\t\tif (isNaN(incomeInput)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisIncomeValid: true,\r\n\t\t\t})\r\n\t\t\t// if income input is an empty string, still display error message\r\n\t\t} else if (incomeInput === '') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisIncomeValid: true,\r\n\t\t\t\tuserIncome: incomeInput,\r\n\t\t\t})\r\n\t\t\t// otherwise, if user input is a number, remove error message\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tuserIncome: incomeInput,\r\n\t\t\t\tisIncomeValid: false,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\thandleCurrentChange = (event) => {\r\n\t\t// look at the value attribute on the dropdown option\r\n\t\tconst userSelection = event.target.value\r\n\t\t// Find Flag\r\n\t\tconst foundFlag = this.state.countryNames.filter(country => {\r\n\t\t\tif (country.currencyCode === userSelection)\r\n\t\t\treturn country.flag\r\n\t\t})[0]['flag'] \r\n\t\t// send it to state\r\n\t\tthis.setState({\r\n\t\t\tcurrentCurrencyCode: userSelection,\r\n\t\t\tflag: foundFlag,\r\n\t\t}, () => {\r\n\t\t\tthis.getCurrencies()\r\n\t\t})\r\n\t}\r\n\r\n\r\n\thandleTargetChange = (event) => {\r\n\t\t// look at the value attribute on the dropdown option\r\n\t\tconst targetSelection = event.target.value\r\n\t\t// find Target Flag\r\n\t\tconst foundTargetFlag = this.state.countryNames.filter(country => {\r\n\t\t\tif (country.currencyCode === targetSelection)\r\n\t\t\treturn country.flag\r\n\t\t})[0]['flag']\r\n\t\t// send it to state\r\n\t\tthis.setState({\r\n\t\t\ttargetCurrencyCode: targetSelection,\r\n\t\t\ttargetFlag: foundTargetFlag,\r\n\t\t}, () => {\r\n    \tthis.getCurrencies()\r\n    \t})\r\n\t}\r\n\r\n\r\n\tgetCurrencies = () => {\r\n\t\t// run this axios call\r\n\t\taxios({\r\n\t\t\t// using custom endpoint built with pieces of state\r\n\t\t\turl: `https://api.exchangeratesapi.io/latest?base=${this.state.currentCurrencyCode}&symbols=${this.state.targetCurrencyCode}`,\r\n\t\t})\r\n    .then((res) => {\r\n    \t// this gives us the target currency CODE\r\n    \tlet conversionCode = this.state.targetCurrencyCode\r\n      \t// this is the rate of conversion\r\n    \tlet convertedRate = res.data.rates[conversionCode]\r\n\r\n    \tthis.setState({\r\n        targetRate: convertedRate,\r\n    \t})\r\n    })\r\n    .catch((error) => {\r\n      Swal.fire({\r\n\t\t\t\ttext: `Sorry, looks we don't have one of your currencies in our database yet, but we're working on it.`,\r\n\t\t\t\tshowClass: {\r\n\t\t\t\t\tpopup: 'animate__animated animate__fadeInDown',\r\n\t\t\t\t},\r\n\t\t\t\thideClass: {\r\n\t\t\t\t\tpopup: 'animate__animated animate__fadeOutUp',\r\n\t\t\t\t\tconfirmButtonColor: '#81003c',\r\n\t\t\t\t},\r\n\t\t\t})\r\n    })\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Header />\r\n\t\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\t<div className=\"mainContainer\">\r\n\t\t\t\t\t\t<div className=\"incomeInputArea\">\r\n\t\t\t\t\t\t\t<h3>Let's get started!</h3>\r\n\t\t\t\t\t\t\t<div className=\"labelLogoIncome\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"incomeAmount\" className=\"srOnly\">Income Amount:</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tid=\"incomeAmount\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.userIncome}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleIncomeInputChange}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Monthly Income\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<img src={money} alt=\"little logo for cash\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{this.state.isIncomeValid ? (\r\n\t\t\t\t\t\t\t\t<p className=\"errorMessage\">Please enter a number value</p>\r\n\t\t\t\t\t\t\t) : <p className=\"errorMessage\"> Your monthly income<span className=\"point\">{up}</span> </p>}\r\n\t\t\t\t\t\t\t<div className=\"incomeDrop\">\r\n\t\t\t\t\t\t\t\t<select className=\"incomeDropdown\" onChange={this.handleCurrentChange}>\r\n\t\t\t\t\t\t\t\t\t{this.state.countryNames.map((country, index) => {\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={country.currencyCode} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{`${country.name}  |  ${country.currencyCode}`}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t<div className=\"currentCodeImg\">\r\n\t\t\t\t\t\t\t\t\t<img src={`${this.state.flag}`} alt={`${this.state.flag}`} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"under\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"errorMessage\">Income currency<span className=\"point\">{up}</span></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"targetDropdown\">\r\n\t\t\t\t\t\t\t\t<select className=\"budgetDropdown\" onChange={this.handleTargetChange}>\r\n\t\t\t\t\t\t\t\t\t{this.state.countryNames.map((country, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={country.currencyCode} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{`${country.name} | ${country.currencyCode}`}\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t<div className=\"currentCodeImg\">\r\n\t\t\t\t\t\t\t\t\t<img src={`${this.state.targetFlag}`} alt={`${this.state.targetFlag}`} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"under\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"errorMessage\">Target currency<span className=\"point\">{up}</span></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t<section className=\"target\">\r\n\t\t\t\t\t\t\t<Currencies\r\n\t\t\t\t\t\t\t\tcurrentCurrencyCode={this.state.currentCurrencyCode}\r\n\t\t\t\t\t\t\t\tparentCallback={this.callbackFunction}\r\n\t\t\t\t\t\t\t\ttargetRate={this.state.targetRate}\r\n\t\t\t\t\t\t\t\tuserIncome={this.state.userIncome}\r\n\t\t\t\t\t\t\t\ttargetCurrencyCode={this.state.targetCurrencyCode}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}